#!/bin/bash

for file in /run/secrets/postgresql/*
do
    [ -e "$file" ] || continue
    export "$(basename $file)=$(cat $file)"
done


# Original run-postgresql
export ENABLE_REPLICATION=${ENABLE_REPLICATION:-false}

set -eu
export_vars=$(cgroup-limits) ; export $export_vars

source "${CONTAINER_SCRIPTS_PATH}/common.sh"

set_pgdata

process_extending_files \
  "${APP_DATA}/src/postgresql-pre-start" \
  "${CONTAINER_SCRIPTS_PATH}/pre-start"

check_env_vars
generate_passwd_file
generate_postgresql_config

# MIQ conditionally inject SSL config
if [ -f /etc/pki/tls/private/server.key ]; then
  echo "ssl = on" >> $POSTGRESQL_CONFIG_FILE
  echo "ssl_cert_file = '/etc/pki/tls/certs/server.crt'" >> $POSTGRESQL_CONFIG_FILE
  echo "ssl_key_file = '/etc/pki/tls/private/server.key'" >> $POSTGRESQL_CONFIG_FILE
fi

# Is this brand new data volume?
PG_INITIALIZED=false

if [ ! -f "$PGDATA/postgresql.conf" ]; then
  initialize_database
  PG_INITIALIZED=:
else
  try_pgupgrade
fi

# MIQ conditionally configure SSL listener
if [ -f /etc/pki/tls/private/server.key ]; then
  # Can't do this before initialize_database
  sed -i 's/host\(\b.*\)/hostssl\1/g' /var/lib/pgsql/data/userdata/pg_hba.conf
fi

# Use insanely large timeout (24h) to ensure that the potential recovery has
# enough time here to happen (unless liveness probe kills us).  Note that in
# case of server failure this command still exists immediately.
pg_ctl start -w --timeout 86400 -o "-h ''"

# This is just a pedantic safety measure (the timeout above is unlikely to
# happen), but `pt_ctl -w` is not reliable prior to PostgreSQL v10 where it
# returns exit_status=0 even if the server is still starting.  For more info
# see the issue#297 and
# https://www.postgresql.org/message-id/CAB7nPqSJs85wK9aknm%3D_jmS6GnH3SQBhpzKcqs8Qo2LhEg2etw%40mail.gmail.com
pg_isready

if $PG_INITIALIZED ; then
  process_extending_files \
    "${APP_DATA}/src/postgresql-init" \
    "${CONTAINER_SCRIPTS_PATH}/init"
  migrate_db
  create_users
fi

process_extending_files \
  "${APP_DATA}/src/postgresql-start" \
  "${CONTAINER_SCRIPTS_PATH}/start"

pg_ctl stop

unset_env_vars
echo "Starting server..."
exec postgres "$@"
